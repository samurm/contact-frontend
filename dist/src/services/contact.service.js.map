{"version":3,"sources":["services/contact.service.js"],"names":["ServiceContact","contacts","letterToFind","filterContacts","ORDER_CONTACTS","DEFAULT","phoneInput","contact","newContact","Contact","_id","e","ExceptionContact","FIELD","MESSAGE","idContact","orderType","orderLetter","orderTypeTranslate","Object","values","EDAD","sort","a","b","toLowerCase","localeCompare","filter","name","toUpperCase"],"mappings":";;;;;;;;IAAMA,c;;;AACF,4BAAa;AAAA;;AACT,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,YAAL,GAAoB,IAApB;AACA,SAAKC,cAAL,GAAsBC,cAAc,CAACC,OAArC;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACH;;;;+BAEUC,O,EAAQ;AACf,UAAG;AACC,YAAMC,UAAU,GAAG,IAAIC,OAAJ,CAAYF,OAAZ,CAAnB;AACA,aAAKN,QAAL,CAAcM,OAAO,CAACG,GAAtB,IAA6BF,UAA7B;AACH,OAHD,CAGC,OAAMG,CAAN,EAAQ;AACL,cAAM,IAAIC,gBAAJ,CAAqBD,CAAC,CAACE,KAAvB,EAA8BF,CAAC,CAACG,OAAhC,CAAN;AACH;AACJ;;;kCAEaC,S,EAAU;AACpB,aAAO,KAAKd,QAAL,CAAcc,SAAd,CAAP;AACH;;;oCAEeC,S,EAAWC,W,EAAY;AAAA;;AACnC,UAAMC,kBAAkB,GAAGd,cAAc,CAACY,SAAD,CAAzC;AACA,UAAMf,QAAQ,GAAGkB,MAAM,CAACC,MAAP,CAAc,KAAKnB,QAAnB,CAAjB;;AACA,UAAGiB,kBAAkB,IAAId,cAAc,CAACiB,IAAxC,EAA6C;AACzCpB,QAAAA,QAAQ,CAACqB,IAAT,CAAc,UAACC,CAAD,EAAGC,CAAH;AAAA,iBAASD,CAAC,CAACL,kBAAD,CAAD,GAAwBM,CAAC,CAACN,kBAAD,CAAlC;AAAA,SAAd;AACH,OAFD,MAEK;AACDjB,QAAAA,QAAQ,CAACqB,IAAT,CAAc,UAACC,CAAD,EAAGC,CAAH;AAAA,iBAASD,CAAC,CAACL,kBAAD,CAAD,CAAsBO,WAAtB,GAAoCC,aAApC,CAAkDF,CAAC,CAACN,kBAAD,CAAD,CAAsBO,WAAtB,EAAlD,CAAT;AAAA,SAAd;AACH;;AACD,UAAGR,WAAW,IAAI,IAAlB,EAAuB;AACpB,eAAOhB,QAAQ,CAAC0B,MAAT,CAAgB,UAAAJ,CAAC;AAAA,iBAAIA,CAAC,CAACK,IAAF,CAAO,CAAP,EAAUC,WAAV,MAA2B,KAAI,CAAC3B,YAApC;AAAA,SAAjB,CAAP;AACF;;AACD,aAAOD,QAAP;AACH","sourcesContent":["class ServiceContact{\n    constructor(){\n        this.contacts = {};\n        this.letterToFind = null;\n        this.filterContacts = ORDER_CONTACTS.DEFAULT;\n        this.phoneInput = 1;\n    }\n\n    addContact(contact){\n        try{\n            const newContact = new Contact(contact);\n            this.contacts[contact._id] = newContact;\n        }catch(e){\n            throw new ExceptionContact(e.FIELD, e.MESSAGE);\n        }\n    }\n\n    removeContact(idContact){\n        delete this.contacts[idContact];\n    }\n\n    orderedContacts(orderType, orderLetter){\n        const orderTypeTranslate = ORDER_CONTACTS[orderType];\n        const contacts = Object.values(this.contacts);\n        if(orderTypeTranslate == ORDER_CONTACTS.EDAD){\n            contacts.sort((a,b) => a[orderTypeTranslate] - b[orderTypeTranslate]);\n        }else{\n            contacts.sort((a,b) => a[orderTypeTranslate].toLowerCase().localeCompare(b[orderTypeTranslate].toLowerCase()));\n        }\n        if(orderLetter != null){\n           return contacts.filter(a => a.name[0].toUpperCase() == this.letterToFind);\n        }\n        return contacts;\n    }\n}"],"file":"contact.service.js"}